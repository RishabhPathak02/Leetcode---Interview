/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head == null || head.next == null){
            return true ;
        }
        ListNode slow = head  ;
        ListNode fast = head ;

        while(fast != null && fast.next != null){
            slow = slow.next ;
            fast = fast.next.next ;
        }
        ListNode prev = null , next ;
        ListNode right = slow ;
        while(right != null){
            next = right.next ;
            right.next = prev ;
            prev = right ;
            right = next ;
        }
        ListNode left = head ;
        ListNode reversedHead = prev ;
        
        while(left != null && reversedHead != null){
            if(left.val != reversedHead.val){
                return false ;
            }
            left = left.next ;
            reversedHead = reversedHead.next ;
        }
        return true ;

        
    }
}
